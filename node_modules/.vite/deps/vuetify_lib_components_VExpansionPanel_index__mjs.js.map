{
  "version": 3,
  "sources": ["../../vuetify/src/components/VExpansionPanel/VExpansionPanels.tsx", "../../vuetify/src/composables/group.ts", "../../vuetify/src/composables/tag.ts", "../../vuetify/src/components/transitions/createTransition.ts", "../../vuetify/src/components/transitions/expand-transition.ts", "../../vuetify/src/components/transitions/dialog-transition.tsx", "../../vuetify/src/components/transitions/index.ts", "../../vuetify/src/composables/lazy.ts", "../../vuetify/src/components/VExpansionPanel/VExpansionPanelText.tsx", "../../vuetify/src/components/VIcon/VIcon.tsx", "../../vuetify/src/composables/color.ts", "../../vuetify/src/composables/size.ts", "../../vuetify/src/directives/ripple/index.ts", "../../vuetify/src/components/VExpansionPanel/VExpansionPanelTitle.tsx", "../../vuetify/src/composables/elevation.ts", "../../vuetify/src/composables/rounded.ts", "../../vuetify/src/components/VExpansionPanel/VExpansionPanel.tsx"],
  "sourcesContent": ["// Styles\nimport './VExpansionPanel.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GroupItemProvide } from '@/composables/group'\n\nexport const VExpansionPanelSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-expansion-panel')\n\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'] as const\n\ntype Variant = typeof allowedVariants[number]\n\nexport const makeVExpansionPanelsProps = propsFactory({\n  color: String,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'default',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n  readonly: Boolean,\n\n  ...makeComponentProps(),\n  ...makeGroupProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VExpansionPanels')\n\nexport const VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n\n  props: makeVExpansionPanelsProps(),\n\n  emits: {\n    'update:modelValue': (val: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    useGroup(props, VExpansionPanelSymbol)\n\n    const { themeClasses } = provideTheme(props)\n\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`)\n\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color'),\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-expansion-panels',\n          themeClasses.value,\n          variantClass.value,\n          props.class,\n        ]}\n        style={ props.style }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanels = InstanceType<typeof VExpansionPanels>\n", "// Composables\nimport { useProxiedModel } from './proxiedModel'\n\n// Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, provide, reactive, toRef, watch } from 'vue'\nimport { consoleWarn, deepEqual, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, ComputedRef, ExtractPropTypes, InjectionKey, PropType, Ref, UnwrapRef } from 'vue'\n\nexport interface GroupItem {\n  id: number\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n}\n\nexport interface GroupProps {\n  disabled: boolean\n  modelValue: unknown\n  multiple?: boolean\n  mandatory?: boolean | 'force' | undefined\n  max?: number | undefined\n  selectedClass: string | undefined\n  'onUpdate:modelValue': ((val: unknown) => void) | undefined\n}\n\nexport interface GroupProvide {\n  register: (item: GroupItem, cmp: ComponentInternalInstance) => void\n  unregister: (id: number) => void\n  select: (id: number, value: boolean) => void\n  selected: Ref<Readonly<number[]>>\n  isSelected: (id: number) => boolean\n  prev: () => void\n  next: () => void\n  selectedClass: Ref<string | undefined>\n  items: ComputedRef<{\n    id: number\n    value: unknown\n    disabled: boolean | undefined\n  }[]>\n  disabled: Ref<boolean | undefined>\n  getItemIndex: (value: unknown) => number\n}\n\nexport interface GroupItemProvide {\n  id: number\n  isSelected: Ref<boolean>\n  toggle: () => void\n  select: (value: boolean) => void\n  selectedClass: Ref<(string | undefined)[] | false>\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n  group: GroupProvide\n}\n\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    default: undefined,\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String] as PropType<boolean | 'force'>,\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean,\n}, 'group')\n\nexport const makeGroupItemProps = propsFactory({\n  value: null,\n  disabled: Boolean,\n  selectedClass: String,\n}, 'group-item')\n\nexport interface GroupItemProps extends ExtractPropTypes<ReturnType<typeof makeGroupItemProps>> {\n  'onGroup:selected': ((val: { value: boolean }) => void) | undefined\n}\n\n// Composables\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required?: true,\n): GroupItemProvide\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required: false,\n): GroupItemProvide | null\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required = true,\n): GroupItemProvide | null {\n  const vm = getCurrentInstance('useGroupItem')\n\n  if (!vm) {\n    throw new Error(\n      '[Vuetify] useGroupItem composable must be used inside a component setup function'\n    )\n  }\n\n  const id = getUid()\n\n  provide(Symbol.for(`${injectKey.description}:id`), id)\n\n  const group = inject(injectKey, null)\n\n  if (!group) {\n    if (!required) return group\n\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`)\n  }\n\n  const value = toRef(props, 'value')\n  const disabled = computed(() => !!(group.disabled.value || props.disabled))\n\n  group.register({\n    id,\n    value,\n    disabled,\n  }, vm)\n\n  onBeforeUnmount(() => {\n    group.unregister(id)\n  })\n\n  const isSelected = computed(() => {\n    return group.isSelected(id)\n  })\n\n  const selectedClass = computed(() => isSelected.value && [group.selectedClass.value, props.selectedClass])\n\n  watch(isSelected, value => {\n    vm.emit('group:selected', { value })\n  })\n\n  return {\n    id,\n    isSelected,\n    toggle: () => group.select(id, !isSelected.value),\n    select: (value: boolean) => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n    group,\n  }\n}\n\nexport function useGroup (\n  props: GroupProps,\n  injectKey: InjectionKey<GroupProvide>\n) {\n  let isUnmounted = false\n  const items = reactive<GroupItem[]>([])\n  const selected = useProxiedModel(\n    props,\n    'modelValue',\n    [],\n    v => {\n      if (v == null) return []\n\n      return getIds(items, wrapInArray(v))\n    },\n    v => {\n      const arr = getValues(items, v)\n\n      return props.multiple ? arr : arr[0]\n    }\n  )\n\n  const groupVm = getCurrentInstance('useGroup')\n\n  function register (item: GroupItem, vm: ComponentInternalInstance) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item as unknown as UnwrapRef<GroupItem>\n\n    const key = Symbol.for(`${injectKey.description}:id`)\n    const children = findChildrenWithProvide(key, groupVm?.vnode)\n    const index = children.indexOf(vm)\n\n    if (index > -1) {\n      items.splice(index, 0, unwrapped)\n    } else {\n      items.push(unwrapped)\n    }\n  }\n\n  function unregister (id: number) {\n    if (isUnmounted) return\n\n    // TODO: re-evaluate this line's importance in the future\n    // should we only modify the model if mandatory is set.\n    // selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue()\n\n    const index = items.findIndex(item => item.id === id)\n    items.splice(index, 1)\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue () {\n    const item = items.find(item => !item.disabled)\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id]\n    }\n  }\n\n  onMounted(() => {\n    forceMandatoryValue()\n  })\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function select (id: number, value?: boolean) {\n    const item = items.find(item => item.id === id)\n    if (value && item?.disabled) return\n\n    if (props.multiple) {\n      const internalValue = selected.value.slice()\n      const index = internalValue.findIndex(v => v === id)\n      const isSelected = ~index\n      value = value ?? !isSelected\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (\n        isSelected &&\n        props.mandatory &&\n        internalValue.length <= 1\n      ) return\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (\n        !isSelected &&\n        props.max != null &&\n        internalValue.length + 1 > props.max\n      ) return\n\n      if (index < 0 && value) internalValue.push(id)\n      else if (index >= 0 && !value) internalValue.splice(index, 1)\n\n      selected.value = internalValue\n    } else {\n      const isSelected = selected.value.includes(id)\n      if (props.mandatory && isSelected) return\n\n      selected.value = (value ?? !isSelected) ? [id] : []\n    }\n  }\n\n  function step (offset: number) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop')\n\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled)\n      item && (selected.value = [item.id])\n    } else {\n      const currentId = selected.value[0]\n      const currentIndex = items.findIndex(i => i.id === currentId)\n\n      let newIndex = (currentIndex + offset) % items.length\n      let newItem = items[newIndex]\n\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length\n        newItem = items[newIndex]\n      }\n\n      if (newItem.disabled) return\n\n      selected.value = [items[newIndex].id]\n    }\n  }\n\n  const state: GroupProvide = {\n    register,\n    unregister,\n    selected,\n    select,\n    disabled: toRef(props, 'disabled'),\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: (id: number) => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n    items: computed(() => items),\n    getItemIndex: (value: unknown) => getItemIndex(items, value),\n  }\n\n  provide(injectKey, state)\n\n  return state\n}\n\nfunction getItemIndex (items: UnwrapRef<GroupItem[]>, value: unknown) {\n  const ids = getIds(items, [value])\n\n  if (!ids.length) return -1\n\n  return items.findIndex(item => item.id === ids[0])\n}\n\nfunction getIds (items: UnwrapRef<GroupItem[]>, modelValue: any[]) {\n  const ids: number[] = []\n\n  modelValue.forEach(value => {\n    const item = items.find(item => deepEqual(value, item.value))\n    const itemByIndex = items[value]\n\n    if (item?.value != null) {\n      ids.push(item.id)\n    } else if (itemByIndex != null) {\n      ids.push(itemByIndex.id)\n    }\n  })\n\n  return ids\n}\n\nfunction getValues (items: UnwrapRef<GroupItem[]>, ids: any[]) {\n  const values: unknown[] = []\n\n  ids.forEach(id => {\n    const itemIndex = items.findIndex(item => item.id === id)\n    if (~itemIndex) {\n      const item = items[itemIndex]\n      values.push(item.value != null ? item.value : itemIndex)\n    }\n  })\n\n  return values\n}\n", "// Utilities\nimport { propsFactory } from '@/util'\n\n// Types\nexport interface TagProps {\n  tag: string\n}\n\n// Composables\nexport const makeTagProps = propsFactory({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n}, 'tag')\n", "// Utilities\nimport { h, Transition, TransitionGroup } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { FunctionalComponent, PropType } from 'vue'\n\nexport const makeTransitionProps = propsFactory({\n  disabled: Boolean,\n  group: Boolean,\n  hideOnLeave: Boolean,\n  leaveAbsolute: Boolean,\n  mode: String,\n  origin: String,\n}, 'transition')\n\nexport function createCssTransition (\n  name: string,\n  origin?: string,\n  mode?: string\n) {\n  return genericComponent()({\n    name,\n\n    props: makeTransitionProps({\n      mode,\n      origin,\n    }),\n\n    setup (props, { slots }) {\n      const functions = {\n        onBeforeEnter (el: HTMLElement) {\n          if (props.origin) {\n            el.style.transformOrigin = props.origin\n          }\n        },\n        onLeave (el: HTMLElement) {\n          if (props.leaveAbsolute) {\n            const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n            el._transitionInitialStyles = {\n              position: el.style.position,\n              top: el.style.top,\n              left: el.style.left,\n              width: el.style.width,\n              height: el.style.height,\n            }\n            el.style.position = 'absolute'\n            el.style.top = `${offsetTop}px`\n            el.style.left = `${offsetLeft}px`\n            el.style.width = `${offsetWidth}px`\n            el.style.height = `${offsetHeight}px`\n          }\n\n          if (props.hideOnLeave) {\n            el.style.setProperty('display', 'none', 'important')\n          }\n        },\n        onAfterLeave (el: HTMLElement) {\n          if (props.leaveAbsolute && el?._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        },\n      }\n\n      return () => {\n        const tag = props.group ? TransitionGroup : Transition\n\n        return h(tag as FunctionalComponent, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          ...(props.group ? undefined : { mode: props.mode }),\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n) {\n  return genericComponent()({\n    name,\n\n    props: {\n      mode: {\n        type: String as PropType<'in-out' | 'out-in' | 'default'>,\n        default: mode,\n      },\n      disabled: Boolean,\n    },\n\n    setup (props, { slots }) {\n      return () => {\n        return h(Transition, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          // mode: props.mode, // TODO: vuejs/vue-next#3104\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n", "// Utilities\nimport { camelize } from 'vue'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = camelize(`offset-${sizeProperty}`) as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    onBeforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    onEnter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle!\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    onAfterEnter: resetStyles,\n    onEnterCancelled: resetStyles,\n\n    onLeave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    onAfterLeave,\n    onLeaveCancelled: onAfterLeave,\n  }\n\n  function onAfterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle![sizeProperty]\n    el.style.overflow = el._initialStyle!.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n", "// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: Object as PropType<HTMLElement>,\n}, 'v-dialog-transition')\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement, el: HTMLElement) {\n  const targetBox = target.getBoundingClientRect()\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n", "import {\n  createCssTransition,\n  createJavascriptTransition,\n} from './createTransition'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VFabTransition = createCssTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogBottomTransition = createCssTransition('dialog-bottom-transition')\nexport const VDialogTopTransition = createCssTransition('dialog-top-transition')\nexport const VFadeTransition = createCssTransition('fade-transition')\nexport const VScaleTransition = createCssTransition('scale-transition')\nexport const VScrollXTransition = createCssTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createCssTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createCssTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createCssTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createCssTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createCssTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createCssTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createCssTransition('slide-y-reverse-transition')\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport { VDialogTransition } from './dialog-transition'\n\nexport type VFabTransition = InstanceType<typeof VFabTransition>\nexport type VDialogBottomTransition = InstanceType<typeof VDialogBottomTransition>\nexport type VDialogTopTransition = InstanceType<typeof VDialogTopTransition>\nexport type VFadeTransition = InstanceType<typeof VFadeTransition>\nexport type VScaleTransition = InstanceType<typeof VScaleTransition>\nexport type VScrollXTransition = InstanceType<typeof VScrollXTransition>\nexport type VScrollXReverseTransition = InstanceType<typeof VScrollXReverseTransition>\nexport type VScrollYTransition = InstanceType<typeof VScrollYTransition>\nexport type VScrollYReverseTransition = InstanceType<typeof VScrollYReverseTransition>\nexport type VSlideXTransition = InstanceType<typeof VSlideXTransition>\nexport type VSlideXReverseTransition = InstanceType<typeof VSlideXReverseTransition>\nexport type VSlideYTransition = InstanceType<typeof VSlideYTransition>\nexport type VSlideYReverseTransition = InstanceType<typeof VSlideYReverseTransition>\nexport type VExpandTransition = InstanceType<typeof VExpandTransition>\nexport type VExpandXTransition = InstanceType<typeof VExpandXTransition>\n", "// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = shallowRef(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n", "// Components\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\nimport { VExpandTransition } from '@/components/transitions'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\n\n// Utilities\nimport { inject } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVExpansionPanelTextProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeLazyProps(),\n}, 'VExpansionPanelText')\n\nexport const VExpansionPanelText = genericComponent()({\n  name: 'VExpansionPanelText',\n\n  props: makeVExpansionPanelTextProps(),\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel')\n\n    const { hasContent, onAfterLeave } = useLazy(props, expansionPanel.isSelected)\n\n    useRender(() => (\n      <VExpandTransition onAfterLeave={ onAfterLeave }>\n        <div\n          class={[\n            'v-expansion-panel-text',\n            props.class,\n          ]}\n          style={ props.style }\n          v-show={ expansionPanel.isSelected.value }\n        >\n          { slots.default && hasContent.value && (\n            <div class=\"v-expansion-panel-text__wrapper\">\n              { slots.default?.() }\n            </div>\n          )}\n        </div>\n      </VExpandTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanelText = InstanceType<typeof VExpansionPanelText>\n", "// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue, useIcon } from '@/composables/icons'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, Text, toRef } from 'vue'\nimport { convertToUnit, flattenFragments, genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'VIcon')\n\nexport const VIcon = genericComponent()({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { attrs, slots }) {\n    const slotIcon = ref<string>()\n\n    const { themeClasses } = provideTheme(props)\n    const { iconData } = useIcon(computed(() => slotIcon.value || props.icon))\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => {\n      const slotValue = slots.default?.()\n      if (slotValue) {\n        slotIcon.value = flattenFragments(slotValue).filter(node =>\n          node.type === Text && node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      }\n\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            themeClasses.value,\n            sizeClasses.value,\n            textColorClasses.value,\n            {\n              'v-icon--clickable': !!attrs.onClick,\n              'v-icon--start': props.start,\n              'v-icon--end': props.end,\n            },\n            props.class,\n          ]}\n          style={[\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n            props.style,\n          ]}\n          role={ attrs.onClick ? 'button' : undefined }\n          aria-hidden={ !attrs.onClick }\n        >\n          { slotValue }\n        </iconData.value.component>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VIcon = InstanceType<typeof VIcon>\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { destructComputed, getForeground, isCssColor, parseColor } from '@/util'\n\n// Types\nimport type { CSSProperties, Ref } from 'vue'\n\ntype ColorValue = string | false | null | undefined\n\nexport interface TextColorData {\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n}\n\nexport interface BackgroundColorData {\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n}\n\n// Composables\nexport function useColor (colors: Ref<{ background?: ColorValue, text?: ColorValue }>) {\n  return destructComputed(() => {\n    const classes: string[] = []\n    const styles: CSSProperties = {}\n\n    if (colors.value.background) {\n      if (isCssColor(colors.value.background)) {\n        styles.backgroundColor = colors.value.background\n\n        if (!colors.value.text) {\n          const backgroundColor = parseColor(colors.value.background)\n          if (backgroundColor.a == null || backgroundColor.a === 1) {\n            const textColor = getForeground(backgroundColor)\n\n            styles.color = textColor\n            styles.caretColor = textColor\n          }\n        }\n      } else {\n        classes.push(`bg-${colors.value.background}`)\n      }\n    }\n\n    if (colors.value.text) {\n      if (isCssColor(colors.value.text)) {\n        styles.color = colors.value.text\n        styles.caretColor = colors.value.text\n      } else {\n        classes.push(`text-${colors.value.text}`)\n      }\n    }\n\n    return { colorClasses: classes, colorStyles: styles }\n  })\n}\n\nexport function useTextColor (color: Ref<ColorValue>): TextColorData\nexport function useTextColor <T extends Record<K, ColorValue>, K extends string> (props: T, name: K): TextColorData\nexport function useTextColor <T extends Record<K, ColorValue>, K extends string> (\n  props: T | Ref<ColorValue>,\n  name?: K\n): TextColorData {\n  const colors = computed(() => ({\n    text: isRef(props) ? props.value : (name ? props[name] : null),\n  }))\n\n  const {\n    colorClasses: textColorClasses,\n    colorStyles: textColorStyles,\n  } = useColor(colors)\n\n  return { textColorClasses, textColorStyles }\n}\n\nexport function useBackgroundColor (color: Ref<ColorValue>): BackgroundColorData\nexport function useBackgroundColor <T extends Record<K, ColorValue>, K extends string> (props: T, name: K): BackgroundColorData\nexport function useBackgroundColor <T extends Record<K, ColorValue>, K extends string> (\n  props: T | Ref<ColorValue>,\n  name?: K\n): BackgroundColorData {\n  const colors = computed(() => ({\n    background: isRef(props) ? props.value : (name ? props[name] : null),\n  }))\n\n  const {\n    colorClasses: backgroundColorClasses,\n    colorStyles: backgroundColorStyles,\n  } = useColor(colors)\n\n  return { backgroundColorClasses, backgroundColorStyles }\n}\n", "// Utilities\nimport { convertToUnit, destructComputed, getCurrentInstanceName, includes, propsFactory } from '@/util'\n\n// Types\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large']\n\nexport interface SizeProps {\n  size?: string | number\n}\n\n// Composables\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default',\n  },\n}, 'size')\n\nexport function useSize (\n  props: SizeProps,\n  name = getCurrentInstanceName(),\n) {\n  return destructComputed(() => {\n    let sizeClasses\n    let sizeStyles\n    if (includes(predefinedSizes, props.size)) {\n      sizeClasses = `${name}--size-${props.size}`\n    } else if (props.size) {\n      sizeStyles = {\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n      }\n    }\n    return { sizeClasses, sizeStyles }\n  })\n}\n", "// Styles\nimport './VRipple.sass'\n\n// Utilities\nimport { isObject, keyCodes } from '@/util'\n\n// Types\nimport type {\n  DirectiveBinding,\n} from 'vue'\n\nconst stopSymbol = Symbol('rippleStop')\n\ntype VuetifyRippleEvent = (MouseEvent | TouchEvent | KeyboardEvent) & { [stopSymbol]?: boolean }\n\nconst DELAY_RIPPLE = 80\n\nfunction transform (el: HTMLElement, value: string) {\n  el.style.transform = value\n  el.style.webkitTransform = value\n}\n\ninterface RippleOptions {\n  class?: string\n  center?: boolean\n  circle?: boolean\n}\n\nexport interface RippleDirectiveBinding extends Omit<DirectiveBinding, 'modifiers' | 'value'> {\n  value?: boolean | { class: string }\n  modifiers: {\n    center?: boolean\n    circle?: boolean\n    stop?: boolean\n  }\n}\n\nfunction isTouchEvent (e: VuetifyRippleEvent): e is TouchEvent {\n  return e.constructor.name === 'TouchEvent'\n}\n\nfunction isKeyboardEvent (e: VuetifyRippleEvent): e is KeyboardEvent {\n  return e.constructor.name === 'KeyboardEvent'\n}\n\nconst calculate = (\n  e: VuetifyRippleEvent,\n  el: HTMLElement,\n  value: RippleOptions = {}\n) => {\n  let localX = 0\n  let localY = 0\n\n  if (!isKeyboardEvent(e)) {\n    const offset = el.getBoundingClientRect()\n    const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e\n\n    localX = target.clientX - offset.left\n    localY = target.clientY - offset.top\n  }\n\n  let radius = 0\n  let scale = 0.3\n  if (el._ripple?.circle) {\n    scale = 0.15\n    radius = el.clientWidth / 2\n    radius = value.center ? radius : radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4\n  } else {\n    radius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2\n  }\n\n  const centerX = `${(el.clientWidth - (radius * 2)) / 2}px`\n  const centerY = `${(el.clientHeight - (radius * 2)) / 2}px`\n\n  const x = value.center ? centerX : `${localX - radius}px`\n  const y = value.center ? centerY : `${localY - radius}px`\n\n  return { radius, scale, x, y, centerX, centerY }\n}\n\nconst ripples = {\n  /* eslint-disable max-statements */\n  show (\n    e: VuetifyRippleEvent,\n    el: HTMLElement,\n    value: RippleOptions = {}\n  ) {\n    if (!el?._ripple?.enabled) {\n      return\n    }\n\n    const container = document.createElement('span')\n    const animation = document.createElement('span')\n\n    container.appendChild(animation)\n    container.className = 'v-ripple__container'\n\n    if (value.class) {\n      container.className += ` ${value.class}`\n    }\n\n    const { radius, scale, x, y, centerX, centerY } = calculate(e, el, value)\n\n    const size = `${radius * 2}px`\n    animation.className = 'v-ripple__animation'\n    animation.style.width = size\n    animation.style.height = size\n\n    el.appendChild(container)\n\n    const computed = window.getComputedStyle(el)\n    if (computed && computed.position === 'static') {\n      el.style.position = 'relative'\n      el.dataset.previousPosition = 'static'\n    }\n\n    animation.classList.add('v-ripple__animation--enter')\n    animation.classList.add('v-ripple__animation--visible')\n    transform(animation, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`)\n    animation.dataset.activated = String(performance.now())\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--enter')\n      animation.classList.add('v-ripple__animation--in')\n      transform(animation, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`)\n    }, 0)\n  },\n\n  hide (el: HTMLElement | null) {\n    if (!el?._ripple?.enabled) return\n\n    const ripples = el.getElementsByClassName('v-ripple__animation')\n\n    if (ripples.length === 0) return\n    const animation = ripples[ripples.length - 1]\n\n    if (animation.dataset.isHiding) return\n    else animation.dataset.isHiding = 'true'\n\n    const diff = performance.now() - Number(animation.dataset.activated)\n    const delay = Math.max(250 - diff, 0)\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--in')\n      animation.classList.add('v-ripple__animation--out')\n\n      setTimeout(() => {\n        const ripples = el.getElementsByClassName('v-ripple__animation')\n        if (ripples.length === 1 && el.dataset.previousPosition) {\n          el.style.position = el.dataset.previousPosition\n          delete el.dataset.previousPosition\n        }\n\n        if (animation.parentNode?.parentNode === el) el.removeChild(animation.parentNode)\n      }, 300)\n    }, delay)\n  },\n}\n\nfunction isRippleEnabled (value: any): value is true {\n  return typeof value === 'undefined' || !!value\n}\n\nfunction rippleShow (e: VuetifyRippleEvent) {\n  const value: RippleOptions = {}\n  const element = e.currentTarget as HTMLElement | undefined\n\n  if (!element?._ripple || element._ripple.touched || e[stopSymbol]) return\n\n  // Don't allow the event to trigger ripples on any other elements\n  e[stopSymbol] = true\n\n  if (isTouchEvent(e)) {\n    element._ripple.touched = true\n    element._ripple.isTouch = true\n  } else {\n    // It's possible for touch events to fire\n    // as mouse events on Android/iOS, this\n    // will skip the event call if it has\n    // already been registered as touch\n    if (element._ripple.isTouch) return\n  }\n\n  value.center = element._ripple.centered || isKeyboardEvent(e)\n  if (element._ripple.class) {\n    value.class = element._ripple.class\n  }\n\n  if (isTouchEvent(e)) {\n    // already queued that shows or hides the ripple\n    if (element._ripple.showTimerCommit) return\n\n    element._ripple.showTimerCommit = () => {\n      ripples.show(e, element, value)\n    }\n    element._ripple.showTimer = window.setTimeout(() => {\n      if (element?._ripple?.showTimerCommit) {\n        element._ripple.showTimerCommit()\n        element._ripple.showTimerCommit = null\n      }\n    }, DELAY_RIPPLE)\n  } else {\n    ripples.show(e, element, value)\n  }\n}\n\nfunction rippleStop (e: VuetifyRippleEvent) {\n  e[stopSymbol] = true\n}\n\nfunction rippleHide (e: Event) {\n  const element = e.currentTarget as HTMLElement | null\n  if (!element?._ripple) return\n\n  window.clearTimeout(element._ripple.showTimer)\n\n  // The touch interaction occurs before the show timer is triggered.\n  // We still want to show ripple effect.\n  if (e.type === 'touchend' && element._ripple.showTimerCommit) {\n    element._ripple.showTimerCommit()\n    element._ripple.showTimerCommit = null\n\n    // re-queue ripple hiding\n    element._ripple.showTimer = window.setTimeout(() => {\n      rippleHide(e)\n    })\n    return\n  }\n\n  window.setTimeout(() => {\n    if (element._ripple) {\n      element._ripple.touched = false\n    }\n  })\n  ripples.hide(element)\n}\n\nfunction rippleCancelShow (e: MouseEvent | TouchEvent) {\n  const element = e.currentTarget as HTMLElement | undefined\n\n  if (!element?._ripple) return\n\n  if (element._ripple.showTimerCommit) {\n    element._ripple.showTimerCommit = null\n  }\n\n  window.clearTimeout(element._ripple.showTimer)\n}\n\nlet keyboardRipple = false\n\nfunction keyboardRippleShow (e: KeyboardEvent) {\n  if (!keyboardRipple && (e.keyCode === keyCodes.enter || e.keyCode === keyCodes.space)) {\n    keyboardRipple = true\n    rippleShow(e)\n  }\n}\n\nfunction keyboardRippleHide (e: KeyboardEvent) {\n  keyboardRipple = false\n  rippleHide(e)\n}\n\nfunction focusRippleHide (e: FocusEvent) {\n  if (keyboardRipple) {\n    keyboardRipple = false\n    rippleHide(e)\n  }\n}\n\nfunction updateRipple (el: HTMLElement, binding: RippleDirectiveBinding, wasEnabled: boolean) {\n  const { value, modifiers } = binding\n  const enabled = isRippleEnabled(value)\n  if (!enabled) {\n    ripples.hide(el)\n  }\n\n  el._ripple = el._ripple ?? {}\n  el._ripple.enabled = enabled\n  el._ripple.centered = modifiers.center\n  el._ripple.circle = modifiers.circle\n  if (isObject(value) && value.class) {\n    el._ripple.class = value.class\n  }\n\n  if (enabled && !wasEnabled) {\n    if (modifiers.stop) {\n      el.addEventListener('touchstart', rippleStop, { passive: true })\n      el.addEventListener('mousedown', rippleStop)\n      return\n    }\n\n    el.addEventListener('touchstart', rippleShow, { passive: true })\n    el.addEventListener('touchend', rippleHide, { passive: true })\n    el.addEventListener('touchmove', rippleCancelShow, { passive: true })\n    el.addEventListener('touchcancel', rippleHide)\n\n    el.addEventListener('mousedown', rippleShow)\n    el.addEventListener('mouseup', rippleHide)\n    el.addEventListener('mouseleave', rippleHide)\n\n    el.addEventListener('keydown', keyboardRippleShow)\n    el.addEventListener('keyup', keyboardRippleHide)\n\n    el.addEventListener('blur', focusRippleHide)\n\n    // Anchor tags can be dragged, causes other hides to fail - #1537\n    el.addEventListener('dragstart', rippleHide, { passive: true })\n  } else if (!enabled && wasEnabled) {\n    removeListeners(el)\n  }\n}\n\nfunction removeListeners (el: HTMLElement) {\n  el.removeEventListener('mousedown', rippleShow)\n  el.removeEventListener('touchstart', rippleShow)\n  el.removeEventListener('touchend', rippleHide)\n  el.removeEventListener('touchmove', rippleCancelShow)\n  el.removeEventListener('touchcancel', rippleHide)\n  el.removeEventListener('mouseup', rippleHide)\n  el.removeEventListener('mouseleave', rippleHide)\n  el.removeEventListener('keydown', keyboardRippleShow)\n  el.removeEventListener('keyup', keyboardRippleHide)\n  el.removeEventListener('dragstart', rippleHide)\n  el.removeEventListener('blur', focusRippleHide)\n}\n\nfunction mounted (el: HTMLElement, binding: RippleDirectiveBinding) {\n  updateRipple(el, binding, false)\n}\n\nfunction unmounted (el: HTMLElement) {\n  delete el._ripple\n  removeListeners(el)\n}\n\nfunction updated (el: HTMLElement, binding: RippleDirectiveBinding) {\n  if (binding.value === binding.oldValue) {\n    return\n  }\n\n  const wasEnabled = isRippleEnabled(binding.oldValue)\n  updateRipple(el, binding, wasEnabled)\n}\n\nexport const Ripple = {\n  mounted,\n  unmounted,\n  updated,\n}\n\nexport default Ripple\n", "// Components\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue } from '@/composables/icons'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\ninterface ExpansionPanelTitleSlot {\n  collapseIcon: IconValue\n  disabled: boolean | undefined\n  expanded: boolean\n  expandIcon: IconValue\n  readonly: boolean\n}\n\nexport type VExpansionPanelTitleSlots = {\n  default: ExpansionPanelTitleSlot\n  actions: ExpansionPanelTitleSlot\n}\n\nexport const makeVExpansionPanelTitleProps = propsFactory({\n  color: String,\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  hideActions: Boolean,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: false,\n  },\n  readonly: Boolean,\n\n  ...makeComponentProps(),\n}, 'VExpansionPanelTitle')\n\nexport const VExpansionPanelTitle = genericComponent<VExpansionPanelTitleSlots>()({\n  name: 'VExpansionPanelTitle',\n\n  directives: { Ripple },\n\n  props: makeVExpansionPanelTitleProps(),\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel')\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'color')\n\n    const slotProps = computed(() => ({\n      collapseIcon: props.collapseIcon,\n      disabled: expansionPanel.disabled.value,\n      expanded: expansionPanel.isSelected.value,\n      expandIcon: props.expandIcon,\n      readonly: props.readonly,\n    }))\n\n    useRender(() => (\n      <button\n        class={[\n          'v-expansion-panel-title',\n          {\n            'v-expansion-panel-title--active': expansionPanel.isSelected.value,\n          },\n          backgroundColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          props.style,\n        ]}\n        type=\"button\"\n        tabindex={ expansionPanel.disabled.value ? -1 : undefined }\n        disabled={ expansionPanel.disabled.value }\n        aria-expanded={ expansionPanel.isSelected.value }\n        onClick={ !props.readonly ? expansionPanel.toggle : undefined }\n        v-ripple={ props.ripple }\n      >\n        <span class=\"v-expansion-panel-title__overlay\" />\n\n        { slots.default?.(slotProps.value) }\n\n        { !props.hideActions && (\n          <span class=\"v-expansion-panel-title__icon\">\n            {\n              slots.actions ? slots.actions(slotProps.value)\n              : <VIcon icon={ expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon } />\n            }\n          </span>\n        )}\n      </button>\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanelTitle = InstanceType<typeof VExpansionPanelTitle>\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nexport interface ElevationProps {\n  elevation?: number | string | null\n}\n\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator (v: any) {\n      const value = parseInt(v)\n\n      return (\n        !isNaN(value) &&\n        value >= 0 &&\n        // Material Design has a maximum elevation of 24\n        // https://material.io/design/environment/elevation.html#default-elevations\n        value <= 24\n      )\n    },\n  },\n}, 'elevation')\n\ntype ElevationData = {\n  elevationClasses: Ref<string[]>\n}\n\nexport function useElevation (props: ElevationProps | Ref<number | string | undefined>): ElevationData {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation\n    const classes: string[] = []\n\n    if (elevation == null) return classes\n\n    classes.push(`elevation-${elevation}`)\n\n    return classes\n  })\n\n  return { elevationClasses }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\ntype RoundedValue = boolean | string | number | null | undefined\n\nexport interface RoundedProps {\n  rounded?: RoundedValue\n  tile?: boolean\n}\n\ntype RoundedData = {\n  roundedClasses: Ref<string[]>\n}\n\n// Composables\nexport const makeRoundedProps = propsFactory({\n  rounded: {\n    type: [Boolean, Number, String],\n    default: undefined,\n  },\n}, 'rounded')\n\nexport function useRounded (\n  props: RoundedProps | Ref<RoundedValue>,\n  name = getCurrentInstanceName(),\n): RoundedData {\n  const roundedClasses = computed(() => {\n    const rounded = isRef(props) ? props.value : props.rounded\n    const classes: string[] = []\n\n    if (rounded === true || rounded === '') {\n      classes.push(`${name}--rounded`)\n    } else if (\n      typeof rounded === 'string' ||\n      rounded === 0\n    ) {\n      for (const value of String(rounded).split(' ')) {\n        classes.push(`rounded-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { roundedClasses }\n}\n", "// Components\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\nimport { VExpansionPanelText } from './VExpansionPanelText'\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from './VExpansionPanelTitle'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps } from '@/composables/lazy'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, provide, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVExpansionPanelProps = propsFactory({\n  title: String,\n  text: String,\n  bgColor: String,\n\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeVExpansionPanelTitleProps(),\n}, 'VExpansionPanel')\n\nexport type VExpansionPanelSlots = {\n  default: never\n  title: never\n  text: never\n}\n\nexport const VExpansionPanel = genericComponent<VExpansionPanelSlots>()({\n  name: 'VExpansionPanel',\n\n  props: makeVExpansionPanelProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'bgColor')\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled)\n\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce<number[]>((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index)\n      return arr\n    }, []))\n\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id)\n      return !groupItem.isSelected.value &&\n        selectedIndices.value.some(selectedIndex => selectedIndex - index === 1)\n    })\n\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id)\n      return !groupItem.isSelected.value &&\n        selectedIndices.value.some(selectedIndex => selectedIndex - index === -1)\n    })\n\n    provide(VExpansionPanelSymbol, groupItem)\n\n    provideDefaults({\n      VExpansionPanelText: {\n        eager: toRef(props, 'eager'),\n      },\n    })\n\n    useRender(() => {\n      const hasText = !!(slots.text || props.text)\n      const hasTitle = !!(slots.title || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-expansion-panel',\n            {\n              'v-expansion-panel--active': groupItem.isSelected.value,\n              'v-expansion-panel--before-active': isBeforeSelected.value,\n              'v-expansion-panel--after-active': isAfterSelected.value,\n              'v-expansion-panel--disabled': isDisabled.value,\n            },\n            roundedClasses.value,\n            backgroundColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            class={[\n              'v-expansion-panel__shadow',\n              ...elevationClasses.value,\n            ]}\n          />\n\n          { hasTitle && (\n            <VExpansionPanelTitle\n              key=\"title\"\n              collapseIcon={ props.collapseIcon }\n              color={ props.color }\n              expandIcon={ props.expandIcon }\n              hideActions={ props.hideActions }\n              ripple={ props.ripple }\n            >\n              { slots.title ? slots.title() : props.title }\n            </VExpansionPanelTitle>\n          )}\n\n          { hasText && (\n            <VExpansionPanelText key=\"text\">\n              { slots.text ? slots.text() : props.text }\n            </VExpansionPanelText>\n          )}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VExpansionPanel = InstanceType<typeof VExpansionPanel>\n"],
  "mappings": "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",
  "names": ["makeGroupProps", "propsFactory", "modelValue", "type", "default", "undefined", "multiple", "Boolean", "mandatory", "String", "max", "Number", "selectedClass", "disabled", "makeGroupItemProps", "value", "useGroupItem", "props", "injectKey", "required", "arguments", "length", "vm", "getCurrentInstance", "Error", "id", "getUid", "provide", "Symbol", "for", "description", "group", "inject", "toRef", "computed", "register", "onBeforeUnmount", "unregister", "isSelected", "watch", "emit", "toggle", "select", "useGroup", "isUnmounted", "items", "reactive", "selected", "useProxiedModel", "v", "getIds", "wrapInArray", "arr", "getValues", "groupVm", "item", "unwrapped", "key", "children", "findChildrenWithProvide", "vnode", "index", "indexOf", "splice", "push", "forceMandatoryValue", "findIndex", "find", "onMounted", "internalValue", "slice", "includes", "step", "offset", "consoleWarn", "currentId", "currentIndex", "i", "newIndex", "newItem", "state", "prev", "next", "getItemIndex", "ids", "forEach", "deepEqual", "itemByIndex", "values", "itemIndex", "makeTagProps", "propsFactory", "tag", "type", "String", "default", "VExpansionPanelSymbol", "Symbol", "for", "allowedVariants", "makeVExpansionPanelsProps", "propsFactory", "color", "String", "variant", "type", "default", "validator", "v", "includes", "readonly", "Boolean", "makeComponentProps", "makeGroupProps", "makeTagProps", "makeThemeProps", "VExpansionPanels", "genericComponent", "name", "props", "emits", "val", "setup", "_ref", "slots", "useGroup", "themeClasses", "provideTheme", "variantClass", "computed", "provideDefaults", "VExpansionPanel", "toRef", "VExpansionPanelTitle", "useRender", "_createVNode", "tag", "value", "class", "style", "makeTransitionProps", "propsFactory", "disabled", "Boolean", "group", "hideOnLeave", "leaveAbsolute", "mode", "String", "origin", "createCssTransition", "name", "genericComponent", "props", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "transformOrigin", "onLeave", "offsetTop", "offsetLeft", "offsetWidth", "offsetHeight", "_transitionInitialStyles", "position", "top", "left", "width", "height", "setProperty", "onAfterLeave", "tag", "TransitionGroup", "Transition", "h", "css", "undefined", "default", "createJavascriptTransition", "arguments", "length", "type", "_ref2", "expandedParentClass", "arguments", "length", "undefined", "x", "sizeProperty", "offsetProperty", "camelize", "onBeforeEnter", "el", "_parent", "parentNode", "_initialStyle", "transition", "style", "overflow", "onEnter", "initialStyle", "setProperty", "offset", "offsetHeight", "classList", "add", "requestAnimationFrame", "onAfterEnter", "resetStyles", "onEnterCancelled", "onLeave", "onAfterLeave", "onLeaveCancelled", "remove", "size", "makeVDialogTransitionProps", "propsFactory", "target", "Object", "VDialogTransition", "genericComponent", "name", "props", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "pointerEvents", "visibility", "onEnter", "done", "Promise", "resolve", "requestAnimationFrame", "x", "y", "sx", "sy", "speed", "getDimensions", "animation", "animate", "transform", "opacity", "duration", "easing", "deceleratedEasing", "getChildren", "forEach", "offset", "standardEasing", "finished", "then", "onAfterEnter", "removeProperty", "onBeforeLeave", "onLeave", "acceleratedEasing", "onAfterLeave", "_createVNode", "Transition", "_mergeProps", "els", "querySelector", "children", "targetBox", "getBoundingClientRect", "elBox", "nullifyTransforms", "originX", "originY", "getComputedStyle", "transformOrigin", "split", "map", "v", "parseFloat", "anchorSide", "anchorOffset", "getPropertyValue", "offsetX", "left", "width", "offsetY", "top", "height", "tsx", "tsy", "maxs", "Math", "max", "asa", "window", "innerWidth", "innerHeight", "min", "VFabTransition", "createCssTransition", "VDialogBottomTransition", "VDialogTopTransition", "VFadeTransition", "VScaleTransition", "VScrollXTransition", "VScrollXReverseTransition", "VScrollYTransition", "VScrollYReverseTransition", "VSlideXTransition", "VSlideXReverseTransition", "VSlideYTransition", "VSlideYReverseTransition", "VExpandTransition", "createJavascriptTransition", "ExpandTransitionGenerator", "VExpandXTransition", "makeLazyProps", "propsFactory", "eager", "Boolean", "useLazy", "props", "active", "isBooted", "shallowRef", "hasContent", "computed", "value", "watch", "onAfterLeave", "makeVExpansionPanelTextProps", "propsFactory", "makeComponentProps", "makeLazyProps", "VExpansionPanelText", "genericComponent", "name", "props", "setup", "_ref", "slots", "expansionPanel", "inject", "VExpansionPanelSymbol", "Error", "hasContent", "onAfterLeave", "useLazy", "isSelected", "useRender", "_createVNode", "VExpandTransition", "default", "_withDirectives", "class", "style", "value", "_vShow", "useColor", "colors", "destructComputed", "classes", "styles", "value", "background", "isCssColor", "backgroundColor", "text", "parseColor", "a", "textColor", "getForeground", "color", "caretColor", "push", "colorClasses", "colorStyles", "useTextColor", "props", "name", "computed", "isRef", "textColorClasses", "textColorStyles", "useBackgroundColor", "backgroundColorClasses", "backgroundColorStyles", "predefinedSizes", "makeSizeProps", "propsFactory", "size", "type", "String", "Number", "default", "useSize", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "destructComputed", "sizeClasses", "sizeStyles", "includes", "width", "convertToUnit", "height", "makeVIconProps", "propsFactory", "color", "String", "start", "Boolean", "end", "icon", "IconValue", "makeComponentProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "VIcon", "genericComponent", "name", "props", "setup", "_ref", "attrs", "slots", "slotIcon", "ref", "themeClasses", "provideTheme", "iconData", "useIcon", "computed", "value", "sizeClasses", "useSize", "textColorClasses", "textColorStyles", "useTextColor", "toRef", "useRender", "slotValue", "default", "flattenFragments", "filter", "node", "type", "Text", "children", "_createVNode", "component", "onClick", "class", "fontSize", "convertToUnit", "size", "height", "width", "undefined", "style", "stopSymbol", "Symbol", "DELAY_RIPPLE", "transform", "el", "value", "style", "webkitTransform", "isTouchEvent", "e", "constructor", "name", "isKeyboardEvent", "calculate", "arguments", "length", "undefined", "localX", "localY", "offset", "getBoundingClientRect", "target", "touches", "clientX", "left", "clientY", "top", "radius", "scale", "_ripple", "circle", "clientWidth", "center", "Math", "sqrt", "clientHeight", "centerX", "centerY", "x", "y", "ripples", "show", "enabled", "container", "document", "createElement", "animation", "appendChild", "className", "class", "size", "width", "height", "computed", "window", "getComputedStyle", "position", "dataset", "previousPosition", "classList", "add", "activated", "String", "performance", "now", "setTimeout", "remove", "hide", "getElementsByClassName", "isHiding", "diff", "Number", "delay", "max", "_a", "parentNode", "removeChild", "isRippleEnabled", "rippleShow", "element", "currentTarget", "touched", "isTouch", "centered", "showTimerCommit", "showTimer", "rippleStop", "rippleHide", "clearTimeout", "type", "rippleCancelShow", "keyboardRipple", "keyboardRippleShow", "keyCode", "keyCodes", "enter", "space", "keyboardRippleHide", "focusRippleHide", "updateRipple", "binding", "wasEnabled", "modifiers", "isObject", "stop", "addEventListener", "passive", "removeListeners", "removeEventListener", "mounted", "unmounted", "updated", "oldValue", "Ripple", "makeVExpansionPanelTitleProps", "propsFactory", "color", "String", "expandIcon", "type", "IconValue", "default", "collapseIcon", "hideActions", "Boolean", "ripple", "Object", "readonly", "makeComponentProps", "VExpansionPanelTitle", "genericComponent", "name", "directives", "Ripple", "props", "setup", "_ref", "slots", "expansionPanel", "inject", "VExpansionPanelSymbol", "Error", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "slotProps", "computed", "disabled", "value", "expanded", "isSelected", "useRender", "_withDirectives", "_createVNode", "class", "style", "undefined", "toggle", "actions", "VIcon", "_resolveDirective", "makeElevationProps", "propsFactory", "elevation", "type", "Number", "String", "validator", "v", "value", "parseInt", "isNaN", "useElevation", "props", "elevationClasses", "computed", "isRef", "classes", "push", "makeRoundedProps", "propsFactory", "rounded", "type", "Boolean", "Number", "String", "default", "undefined", "useRounded", "props", "name", "arguments", "length", "getCurrentInstanceName", "roundedClasses", "computed", "isRef", "value", "classes", "push", "split", "makeVExpansionPanelProps", "propsFactory", "title", "String", "text", "bgColor", "makeComponentProps", "makeElevationProps", "makeGroupItemProps", "makeLazyProps", "makeRoundedProps", "makeTagProps", "makeVExpansionPanelTitleProps", "VExpansionPanel", "genericComponent", "name", "props", "emits", "val", "setup", "_ref", "slots", "groupItem", "useGroupItem", "VExpansionPanelSymbol", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "isDisabled", "computed", "disabled", "value", "selectedIndices", "group", "items", "reduce", "arr", "item", "index", "selected", "includes", "id", "push", "isBeforeSelected", "findIndex", "isSelected", "some", "selectedIndex", "isAfterSelected", "provide", "provideDefaults", "VExpansionPanelText", "eager", "toRef", "useRender", "hasText", "hasTitle", "_createVNode", "tag", "class", "style", "default", "VExpansionPanelTitle", "collapseIcon", "color", "expandIcon", "hideActions", "ripple"]
}
